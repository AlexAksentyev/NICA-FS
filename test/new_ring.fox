INCLUDE 'bin/support/main';

FUNCTION FITTUNE MU;
  VARIABLE RES 2 2; VARIABLE PENALTY 1;
  RES(1) := CONS(MU(1)) - PI/2 / (2*PI) * 1;
  RES(2) := CONS(MU(2)) - PI/2 / (2*PI) * 1;
  PENALTY := ABS(IMAG(RES(1))) + ABS(IMAG(RES(2)));
  FITTUNE := ABS(RES(1)) + ABS(RES(2)) + PENALTY;
ENDFUNCTION;

PROCEDURE INJECT;
  CR;
  SR 1E-3 0 0 0 0 0 0 0 1; SSR 0 0 1;
  SR 0 0 1E-3 0 0 0 0 0 1; SSR 0 0 1;
  SR .5E-3 0 0 0 0 0 0 0 1; SSR 0 0 1;
  SR 0 0 .5E-3 0 0 0 0 0 1; SSR 0 0 1;
ENDPROCEDURE;

PROCEDURE RUN;
  VARIABLE WHERE 100;
  VARIABLE HZ1 1; VARIABLE HZ2 1;
  VARIABLE QF 1; VARIABLE QD 1;
  VARIABLE I 1; VARIABLE LQ 1;
  VARIABLE MU 100 2; VARIABLE OBJ 2;
  VARIABLE A 100 2; VARIABLE B 100 2;
  VARIABLE G 100 2; VARIABLE R 100 2;
  VARIABLE F 100 6;

  PROCEDURE CELL QF QD L;
    QUAD L/2 0 QD; DL .1;
    RBEND 1.94 4.5*DEGRAD 0; DL .1;
    QUAD L 0 QF; DL .1;
    RBEND 1.94 4.5*DEGRAD 0; DL .1;
    QUAD L/2 0 QD;
  ENDPROCEDURE;
  PROCEDURE SUPER QF QD L;
    CELL QF QD L;
    CELL QF QD L;
    CELL QF QD L;
  ENDPROCEDURE;
  PROCEDURE FODO QF QD L;
    QUAD L/2 0 QD; DL .1;
    QUAD L 0 QF; DL .1;
    QUAD L/2 0 QD;
  ENDPROCEDURE;
  PROCEDURE SUPER_FODO QF QD L;
    FODO QF QD L;
    FODO QF QD L;
    FODO QF QD L;
  ENDPROCEDURE;


  DIRSET WHERE 'data/NEW_RING/' 1;
  GROUTF 'img/dump/TR' 1;

  OV 3 2 2;
  SET_FOR_PROTONS HZ1 HZ2 QF QD;
  QF := 0; QD :=0;

  SB .15 .15 0 .15 .15 0 0 0 0 0 0;
  QF := 3.019; QD := -3.061;

IF FALSE;
  UM; CR; ER 1 3 1 3 1 1 1 1;
  BP; DL .2;
  SUPER_FODO QF QD .2;
  EP;
  PG -1 -2;
  TP MU;
  WRITE 6 MU(1) MU(2);
ENDIF;

{TRYING TO OPTIMIZE THE QUADRUPOLE STRENGTH}
IF TRUE;
  FIT QF QD;
  UM; CR; ER 1 3 1 3 1 1 1 1;
  BP; DL .2;
  CELL QF QD .2;
  EP;
  PG -1 -2;
  TP MU;
  WRITE 6 'QUAD STRENGTHS'
           SF(QF, '(E15.7)')&SF(QD, '(E15.7)');
  WRITE 6 'TUNES' MU(1) MU(2);
  OBJ := FITTUNE(MU); { ABS(ME(1,2)) + ABS(ME(3,4)); }
  WRITE 6 'OBJECTIVE: '&ST(OBJ);
  ENDFIT 1E-5 500 1 OBJ;
  WRITE 6 '########## OPTIMIZATION RESULTS' SF(QF, '(E15.7)')&SF(QD, '(E15.7)');
ENDIF;
  
  WRITE 6 'B\RHO = '&ST(CONS(CHIM));

  INJECT;
  OPENF 924 WHERE&'TRPRAY.dat' 'REPLACE';
  OPENF 925 WHERE&'TRPSPI.dat' 'REPLACE';
    TRPRAY 924; TRPSPI 925;
    TR 100 1 1 2 1.2e-3 1.2e-3 0 0 -3;
  CLOSEF 924; CLOSEF 925;
ENDPROCEDURE;
RUN; END;
