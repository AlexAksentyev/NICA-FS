{I'm taking parameter values from the optim file.}
{There, the quadrupole grads are given in kGs/cm, so}
{K1 is in kGs/cm.}


INCLUDE '~/REPOS/COSYINF-CORE/bin/utilities';

PROCEDURE ROTATE PHI;
  VARIABLE M NM1 4; VARIABLE ANG NM2;
  VARIABLE i 1;
  ANG := PHI*DEGRAD;
  WRITE 6 'ROTATING BY ' PHI;
  M(1):= COS(ANG)*MAP(1) + SIN(ANG)*MAP(3);
  M(3):=-SIN(ANG)*MAP(1) + COS(ANG)*MAP(3);
  M(2):= COS(ANG)*MAP(2) + SIN(ANG)*MAP(4);
  M(4):=-SIN(ANG)*MAP(2) + COS(ANG)*MAP(4);
  LOOP i 1 4; MAP(i):=M(i);  ENDLOOP;
ENDPROCEDURE; {ROTATE}

PROCEDURE QUAD L {m} K1 {m^-2} ;
  {L quadrupole length}
  {K1 = B_Y/X / (B_0 R) [m^-2]}
      {COSY wants magnetic induction at the pole,}
      {which is B_y(a) = B*\rho*K_1*a, a = aperture}
      {checked with Optim; there K1 is Tl/m (not normalized by B\rho}
      {hence B_y(a) = K1 * a in the automatic converter}
  VARIABLE Bpt 1; {magnetic induction (flux density @ pole tip}
  VARIABLE A 1; {aperture}

  A:=1;
  { WRITE 6 'CHIM = ' CHIM; }
  
  Bpt := K1*CONS(CHIM)*A; {in Tesla}
  
  MQ L Bpt A;
ENDPROCEDURE; {QUAD}

PROCEDURE SBEND L ANGLE TILT;
  VARIABLE R 1;
  R := L/(ANGLE*DEGRAD);
  ROTATE TILT;
    DI R ANGLE .1 0 0 0 0;
  ROTATE -TILT;
ENDPROCEDURE; {SBEND}

PROCEDURE RBEND L ANGLE TILT;
  VARIABLE R 1;
  R := L/(ANGLE*DEGRAD);
  ROTATE TILT;
    DP R ANGLE .1;
  ROTATE -TILT;
ENDPROCEDURE; {RBEND}

PROCEDURE SOLENOID L {m} KS {rad/m};
  VARIABLE B0 1; VARIABLE A 1;
  A := .05;
  B0 := KS * CONS(CHIM);
  CMS B0 A L;
ENDPROCEDURE; {SOLENOID}
 
SAVE 'bin/elements';
